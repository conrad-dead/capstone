<?php
// Only start session if not already started
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Try different paths for database connection
$db_paths = [
    "../db/conn.php",
    "../../db/conn.php", 
    "db/conn.php"
];

$db_loaded = false;
foreach ($db_paths as $path) {
    if (file_exists($path)) {
        require_once $path;
        $db_loaded = true;
        break;
    }
}

if (!$db_loaded) {
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'Database connection file not found']);
    exit();
}

if ($conn->connect_error) {
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => 'Database connection failed: '. $conn->connect_error]);
    exit();
}

// Basic auth guard
function require_login() {
    if (!isset($_SESSION['user_id'])) {
        http_response_code(401);
        echo json_encode(['success' => false, 'message' => 'Authentication required']);
        exit();
    }
}

require_login();

$method = $_SERVER['REQUEST_METHOD'];
$format = $_GET['format'] ?? 'pdf';
$report_type = $_GET['type'] ?? 'inventory';

if ($method !== 'GET') {
    http_response_code(405);
    echo json_encode(['success' => false, 'message' => 'Method not allowed']);
    exit();
}

// Function to get inventory data
function getInventoryData($conn) {
    $sql = "SELECT m.id, m.name, m.quantity, m.expiry_date, mc.name as category_name, m.unit
            FROM medicine m
            LEFT JOIN medicine_categories mc ON m.category_id = mc.id
            ORDER BY m.name ASC";
    
    $data = [];
    if ($result = $conn->query($sql)) {
        while ($row = $result->fetch_assoc()) {
            $data[] = $row;
        }
        $result->free();
    }
    return $data;
}

// Function to get distribution data
function getDistributionData($conn) {
    $sql = "SELECT md.id, md.quantity, md.prescription_date, md.distribution_date, md.status, md.notes,
                   m.name as medicine_name, p.first_name, p.last_name, u.username as doctor_name
            FROM medicine_distribution md
            LEFT JOIN medicine m ON md.medicine_id = m.id
            LEFT JOIN patients p ON md.patient_id = p.id
            LEFT JOIN users u ON md.doctor_id = u.id
            ORDER BY md.distribution_date DESC";
    
    $data = [];
    if ($result = $conn->query($sql)) {
        while ($row = $result->fetch_assoc()) {
            $data[] = $row;
        }
        $result->free();
    }
    return $data;
}

// Function to generate CSV content
function generateCSV($data, $headers) {
    $output = fopen('php://temp', 'r+');
    
    // Add headers
    fputcsv($output, $headers);
    
    // Add data
    foreach ($data as $row) {
        fputcsv($output, $row);
    }
    
    rewind($output);
    $csv = stream_get_contents($output);
    fclose($output);
    
    return $csv;
}

// Function to generate HTML content for PDF
function generateHTML($data, $headers, $title) {
    $html = '<!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>' . $title . '</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            h1 { color: #2c3e50; text-align: center; }
            table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
            th { background-color: #f2f2f2; font-weight: bold; }
            tr:nth-child(even) { background-color: #f9f9f9; }
            .header { text-align: center; margin-bottom: 30px; }
            .footer { margin-top: 30px; text-align: center; font-size: 12px; color: #666; }
        </style>
    </head>
    <body>
        <div class="header">
            <h1>RHU GAMU - ' . $title . '</h1>
            <p>Generated on: ' . date('F j, Y \a\t g:i A') . '</p>
        </div>
        
        <table>
            <thead>
                <tr>';
    
    foreach ($headers as $header) {
        $html .= '<th>' . htmlspecialchars($header) . '</th>';
    }
    
    $html .= '</tr></thead><tbody>';
    
    foreach ($data as $row) {
        $html .= '<tr>';
        foreach ($row as $cell) {
            $html .= '<td>' . htmlspecialchars($cell) . '</td>';
        }
        $html .= '</tr>';
    }
    
    $html .= '</tbody></table>
        
        <div class="footer">
            <p>This report was generated by the RHU GAMU Pharmacy Management System</p>
        </div>
    </body>
    </html>';
    
    return $html;
}

try {
    switch ($report_type) {
        case 'inventory':
            $data = getInventoryData($conn);
            $headers = ['ID', 'Medicine Name', 'Quantity', 'Unit', 'Category', 'Expiry Date'];
            $title = 'Inventory Report';
            
            // Prepare data for export
            $export_data = [];
            foreach ($data as $row) {
                $export_data[] = [
                    $row['id'],
                    $row['name'],
                    $row['quantity'],
                    $row['unit'] ?? 'N/A',
                    $row['category_name'] ?? 'Uncategorized',
                    $row['expiry_date'] ?? 'N/A'
                ];
            }
            break;
            
        case 'distribution':
            $data = getDistributionData($conn);
            $headers = ['ID', 'Patient Name', 'Medicine', 'Quantity', 'Prescription Date', 'Distribution Date', 'Status', 'Doctor'];
            $title = 'Distribution Report';
            
            // Prepare data for export
            $export_data = [];
            foreach ($data as $row) {
                $export_data[] = [
                    $row['id'],
                    $row['first_name'] . ' ' . $row['last_name'],
                    $row['medicine_name'],
                    $row['quantity'],
                    $row['prescription_date'],
                    $row['distribution_date'],
                    $row['status'],
                    $row['doctor_name']
                ];
            }
            break;
            
        default:
            throw new Exception('Invalid report type');
    }
    
    if ($format === 'excel') {
        // Generate CSV (Excel-compatible)
        $csv_content = generateCSV($export_data, $headers);
        
        header('Content-Type: text/csv');
        header('Content-Disposition: attachment; filename="' . $report_type . '_report_' . date('Y-m-d') . '.csv"');
        header('Content-Length: ' . strlen($csv_content));
        
        echo $csv_content;
        
    } elseif ($format === 'pdf') {
        // Generate HTML for PDF conversion
        $html_content = generateHTML($export_data, $headers, $title);
        
        // For now, return HTML that can be converted to PDF using browser print
        header('Content-Type: text/html');
        echo $html_content;
        
    } else {
        throw new Exception('Invalid format. Use "pdf" or "excel"');
    }
    
} catch (Exception $e) {
    header('Content-Type: application/json');
    echo json_encode(['success' => false, 'message' => $e->getMessage()]);
}

$conn->close();
?>
